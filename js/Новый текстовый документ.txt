Создание тегов:
<body>
<div id="program"></div>

<script type="text/babel">
    class Game extends React.Component {
    render(){
       return(
           <div>
                <h1>{this.props.name}</h1>
               <h2>{this.props.age}</h2>
           </div>
       );
    }
    }
    const app = document.getElementById("program");
    ReactDOM.render (
        <div>
            <Game name="Forza" age="18+" />
            <Game name="tt" age="184+" />
            <Game name="For" age="138+" />
        </div>,
        app);
</script>?

</body>
****************Конец создания тегов*************************

***************Отслеживание событий**************************
<script type="text/babel">
    class Task extends React.Component {
        edit(){
           alert("нажата ккнопка редактировать")
        };
        remove(){
            alert("нажата ккнопка удалить")
        };
    render(){
       return(
           <div className="box">
                <div className="text">{this.props.children}</div>
               <div onClick={this.edit} className="btn light">Редактировать</div>
               <div onClick={this.remove} className="btn red">Удалить</div>
           </div>
       );
    };
    };
    const app = document.getElementById("program");
    ReactDOM.render (
        <div className="field">
          <Task>asd</Task>
            <Task>asdds</Task>
            <Task>asdsdfa</Task>
        </div>,
        app);
</script>?

********************Конец отслеживания событий*****************************
********************Состояние******************************************
<body>
<div id="program"></div>

<script type="text/babel">
    class Check extends React.Component {
        constructor(props) {
            super(props);
            this.state = {
                checked: true,
            };
        };
        handleCheck = () => {
            this.setState({checked: !this.state.checked});
        };
        render() {
            var message;
            if (this.state.checked) {
                message = 'выбран';
            } else {
                message = 'не выбран';
            }
            return (
                <div>
                    <input type="checkbox" onChange={this.handleCheck} defaultChecked={this.state.checked} />
                    <p>Чекбокс {message}</p>
                </div>
            );
        }
    }
    const app = document.getElementById("program");
    ReactDOM.render (<Check />, app);
</script>?

</body>
**********************Конец состояния************************